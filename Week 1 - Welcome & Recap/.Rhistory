t.test(data_sample$Single, data_sample$Romance)
summary(t.test(data_sample$Single, data_sample$Romance))
help(t.test)
t.test(data_sample$Single, data_sample$Romance, paired = TRUE)
t.test(Single ~ Romance, data = data_sample)
t.test(Single, formula = Single ~ Romance, data = data_sample)
t.test(data$Single, formula = Single ~ Romance, data = data_sample)
t.test(data_sample$Single, formula = Single ~ Romance, data = data_sample)
t.test(data_sample$Single ~ data_sample$Romance)
t.test(data_sample$Romance ~ data_sample$Single)
t.test(c(data_sample$Romance, data_sample$Scifi, data_sample$smilesaday, data_sample$Weatherchecker, data_sample$Newsreader ~ data_sample$Single)
)
t.test(c(data_sample$Romance, data_sample$Scifi, data_sample$smilesaday, data_sample$Weatherchecker, data_sample$Newsreader ~ data_sample$Single), paired = TRUE)
t.test(c(data_sample$Romance, data_sample$Scifi, data_sample$smilesaday, data_sample$Weatherchecker, data_sample$Newsreader) ~ data_sample$Single)
t.test(c(data_sample$Romance, data_sample$Scifi, data_sample$smilesaday, data_sample$Weatherchecker, data_sample$Newsreader), data_sample$Single, paired = TRUE)
t.test(list(data_sample$Romance, data_sample$Scifi, data_sample$smilesaday, data_sample$Weatherchecker, data_sample$Newsreader), data_sample$Single, paired = TRUE)
library(survival)
lapply(data_sample[,c(Romance, Scifi, smilesaday, Weatherchecker, Newsreader)], function(x)t.test(x ~ data_sample$Single, var.equal = TRUE)
)
data(kidney)
lapply(kidney[,c("time", "age", "frail")], function(x) t.test(x ~ kidney$sex, var.equal = TRUE))
lapply(data_sample[,c("Romance", "Scifi", "smilesaday", "Weatherchecker", "Newsreader")], function(x)t.test(x ~ data_sample$Single, var.equal = TRUE))
